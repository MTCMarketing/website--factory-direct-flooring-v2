{"version":3,"file":"600-bee175b80dcee6284c93.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/lightgallery/plugins/zoom/lg-zoom.es5.js"],"sourcesContent":["/*!\n * lightgallery | 2.8.3 | March 1st 2025\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar zoomSettings = {\r\n    scale: 1,\r\n    zoom: true,\r\n    infiniteZoom: true,\r\n    actualSize: true,\r\n    showZoomInOutIcons: false,\r\n    actualSizeIcons: {\r\n        zoomIn: 'lg-zoom-in',\r\n        zoomOut: 'lg-zoom-out',\r\n    },\r\n    enableZoomAfter: 300,\r\n    zoomPluginStrings: {\r\n        zoomIn: 'Zoom in',\r\n        zoomOut: 'Zoom out',\r\n        viewActualSize: 'View actual size',\r\n    },\r\n};\n\n/**\r\n * List of lightGallery events\r\n * All events should be documented here\r\n * Below interfaces are used to build the website documentations\r\n * */\r\nvar lGEvents = {\r\n    afterAppendSlide: 'lgAfterAppendSlide',\r\n    init: 'lgInit',\r\n    hasVideo: 'lgHasVideo',\r\n    containerResize: 'lgContainerResize',\r\n    updateSlides: 'lgUpdateSlides',\r\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n    beforeOpen: 'lgBeforeOpen',\r\n    afterOpen: 'lgAfterOpen',\r\n    slideItemLoad: 'lgSlideItemLoad',\r\n    beforeSlide: 'lgBeforeSlide',\r\n    afterSlide: 'lgAfterSlide',\r\n    posterClick: 'lgPosterClick',\r\n    dragStart: 'lgDragStart',\r\n    dragMove: 'lgDragMove',\r\n    dragEnd: 'lgDragEnd',\r\n    beforeNextSlide: 'lgBeforeNextSlide',\r\n    beforePrevSlide: 'lgBeforePrevSlide',\r\n    beforeClose: 'lgBeforeClose',\r\n    afterClose: 'lgAfterClose',\r\n    rotateLeft: 'lgRotateLeft',\r\n    rotateRight: 'lgRotateRight',\r\n    flipHorizontal: 'lgFlipHorizontal',\r\n    flipVertical: 'lgFlipVertical',\r\n    autoplay: 'lgAutoplay',\r\n    autoplayStart: 'lgAutoplayStart',\r\n    autoplayStop: 'lgAutoplayStop',\r\n};\n\nvar ZOOM_TRANSITION_DURATION = 500;\r\nvar Zoom = /** @class */ (function () {\r\n    function Zoom(instance, $LG) {\r\n        // get lightGallery core plugin instance\r\n        this.core = instance;\r\n        this.$LG = $LG;\r\n        this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\r\n        return this;\r\n    }\r\n    // Append Zoom controls. Actual size, Zoom-in, Zoom-out\r\n    Zoom.prototype.buildTemplates = function () {\r\n        var zoomIcons = this.settings.showZoomInOutIcons\r\n            ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomOut'] + \"\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\"\r\n            : '';\r\n        if (this.settings.actualSize) {\r\n            zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['viewActualSize'] + \"\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\r\n        }\r\n        this.core.outer.addClass('lg-use-transition-for-zoom');\r\n        this.core.$toolbar.first().append(zoomIcons);\r\n    };\r\n    /**\r\n     * @desc Enable zoom option only once the image is completely loaded\r\n     * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n     *\r\n     * Zoom styles are defined under lg-zoomable CSS class.\r\n     */\r\n    Zoom.prototype.enableZoom = function (event) {\r\n        var _this = this;\r\n        // delay will be 0 except first time\r\n        var _speed = this.settings.enableZoomAfter + event.detail.delay;\r\n        // set _speed value 0 if gallery opened from direct url and if it is first slide\r\n        if (this.$LG('body').first().hasClass('lg-from-hash') &&\r\n            event.detail.delay) {\r\n            // will execute only once\r\n            _speed = 0;\r\n        }\r\n        else {\r\n            // Remove lg-from-hash to enable starting animation.\r\n            this.$LG('body').first().removeClass('lg-from-hash');\r\n        }\r\n        this.zoomableTimeout = setTimeout(function () {\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\r\n            if (event.detail.index === _this.core.index) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        }, _speed + 30);\r\n    };\r\n    Zoom.prototype.enableZoomOnSlideItemLoad = function () {\r\n        // Add zoomable class\r\n        this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\r\n    };\r\n    Zoom.prototype.getDragCords = function (e) {\r\n        return {\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n        };\r\n    };\r\n    Zoom.prototype.getSwipeCords = function (e) {\r\n        var x = e.touches[0].pageX;\r\n        var y = e.touches[0].pageY;\r\n        return {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    };\r\n    Zoom.prototype.getDragAllowedAxises = function (scale, scaleDiff) {\r\n        if (!this.containerRect) {\r\n            return {\r\n                allowX: false,\r\n                allowY: false,\r\n            };\r\n        }\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first()\r\n            .get();\r\n        var height = 0;\r\n        var width = 0;\r\n        var rect = $image.getBoundingClientRect();\r\n        if (scale) {\r\n            height = $image.offsetHeight * scale;\r\n            width = $image.offsetWidth * scale;\r\n        }\r\n        else if (scaleDiff) {\r\n            height = rect.height + scaleDiff * rect.height;\r\n            width = rect.width + scaleDiff * rect.width;\r\n        }\r\n        else {\r\n            height = rect.height;\r\n            width = rect.width;\r\n        }\r\n        var allowY = height > this.containerRect.height;\r\n        var allowX = width > this.containerRect.width;\r\n        return {\r\n            allowX: allowX,\r\n            allowY: allowY,\r\n        };\r\n    };\r\n    Zoom.prototype.setZoomEssentials = function () {\r\n        this.containerRect = this.core.$content.get().getBoundingClientRect();\r\n    };\r\n    /**\r\n     * @desc Image zoom\r\n     * Translate the wrap and scale the image to get better user experience\r\n     *\r\n     * @param {String} scale - Zoom decrement/increment value\r\n     */\r\n    Zoom.prototype.zoomImage = function (scale, scaleDiff, reposition, resetToMax) {\r\n        if (Math.abs(scaleDiff) <= 0)\r\n            return;\r\n        var offsetX = this.containerRect.width / 2 + this.containerRect.left;\r\n        var offsetY = this.containerRect.height / 2 +\r\n            this.containerRect.top +\r\n            this.scrollTop;\r\n        var originalX;\r\n        var originalY;\r\n        if (scale === 1) {\r\n            this.positionChanged = false;\r\n        }\r\n        var dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);\r\n        var allowY = dragAllowedAxises.allowY, allowX = dragAllowedAxises.allowX;\r\n        if (this.positionChanged) {\r\n            originalX = this.left / (this.scale - scaleDiff);\r\n            originalY = this.top / (this.scale - scaleDiff);\r\n            this.pageX = offsetX - originalX;\r\n            this.pageY = offsetY - originalY;\r\n            this.positionChanged = false;\r\n        }\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);\r\n        var x;\r\n        var y;\r\n        var _x = offsetX - this.pageX;\r\n        var _y = offsetY - this.pageY;\r\n        if (scale - scaleDiff > 1) {\r\n            var scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);\r\n            _x =\r\n                (scaleDiff < 0 ? -_x : _x) +\r\n                    this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n            _y =\r\n                (scaleDiff < 0 ? -_y : _y) +\r\n                    this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n            x = _x / scaleVal;\r\n            y = _y / scaleVal;\r\n        }\r\n        else {\r\n            var scaleVal = (scale - scaleDiff) * scaleDiff;\r\n            x = _x * scaleVal;\r\n            y = _y * scaleVal;\r\n        }\r\n        if (reposition) {\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\r\n                    x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {\r\n                    x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            else {\r\n                if (scale > 1) {\r\n                    if (x < possibleSwipeCords.minX) {\r\n                        x = possibleSwipeCords.minX;\r\n                    }\r\n                    else if (x > possibleSwipeCords.maxX) {\r\n                        x = possibleSwipeCords.maxX;\r\n                    }\r\n                }\r\n            }\r\n            // @todo fix this\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\r\n                    y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {\r\n                    y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            else {\r\n                // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\r\n                if (scale > 1) {\r\n                    //If image goes beyond viewport top, use the minim possible translate value\r\n                    if (y < possibleSwipeCords.minY) {\r\n                        y = possibleSwipeCords.minY;\r\n                    }\r\n                    else if (y > possibleSwipeCords.maxY) {\r\n                        y = possibleSwipeCords.maxY;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setZoomStyles({\r\n            x: x,\r\n            y: y,\r\n            scale: scale,\r\n        });\r\n        this.left = x;\r\n        this.top = y;\r\n        if (resetToMax) {\r\n            this.setZoomImageSize();\r\n        }\r\n    };\r\n    Zoom.prototype.resetImageTranslate = function (index) {\r\n        if (!this.isImageSlide(index)) {\r\n            return;\r\n        }\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        this.imageReset = false;\r\n        $image.removeClass('reset-transition reset-transition-y reset-transition-x');\r\n        this.core.outer.removeClass('lg-actual-size');\r\n        $image.css('width', 'auto').css('height', 'auto');\r\n        setTimeout(function () {\r\n            $image.removeClass('no-transition');\r\n        }, 10);\r\n    };\r\n    Zoom.prototype.setZoomImageSize = function () {\r\n        var _this = this;\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        setTimeout(function () {\r\n            var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n            if (_this.scale >= actualSizeScale) {\r\n                $image.addClass('no-transition');\r\n                _this.imageReset = true;\r\n            }\r\n        }, ZOOM_TRANSITION_DURATION);\r\n        setTimeout(function () {\r\n            var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n            if (_this.scale >= actualSizeScale) {\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(_this.scale);\r\n                $image\r\n                    .css('width', $image.get().naturalWidth + 'px')\r\n                    .css('height', $image.get().naturalHeight + 'px');\r\n                _this.core.outer.addClass('lg-actual-size');\r\n                if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition');\r\n                }\r\n                else if (dragAllowedAxises.allowX &&\r\n                    !dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition-x');\r\n                }\r\n                else if (!dragAllowedAxises.allowX &&\r\n                    dragAllowedAxises.allowY) {\r\n                    $image.addClass('reset-transition-y');\r\n                }\r\n            }\r\n        }, ZOOM_TRANSITION_DURATION + 50);\r\n    };\r\n    /**\r\n     * @desc apply scale3d to image and translate to image wrap\r\n     * @param {style} X,Y and scale\r\n     */\r\n    Zoom.prototype.setZoomStyles = function (style) {\r\n        var $imageWrap = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var $dummyImage = this.core.outer\r\n            .find('.lg-current .lg-dummy-img')\r\n            .first();\r\n        this.scale = style.scale;\r\n        $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n        var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\r\n        $imageWrap.css('transform', transform);\r\n    };\r\n    /**\r\n     * @param index - Index of the current slide\r\n     * @param event - event will be available only if the function is called on clicking/taping the imags\r\n     */\r\n    Zoom.prototype.setActualSize = function (index, event) {\r\n        var _this = this;\r\n        if (this.zoomInProgress) {\r\n            return;\r\n        }\r\n        this.zoomInProgress = true;\r\n        var currentItem = this.core.galleryItems[this.core.index];\r\n        this.resetImageTranslate(index);\r\n        setTimeout(function () {\r\n            // Allow zoom only on image\r\n            if (!currentItem.src ||\r\n                _this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                return;\r\n            }\r\n            var scale = _this.getCurrentImageActualSizeScale();\r\n            var prevScale = _this.scale;\r\n            if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                _this.scale = 1;\r\n            }\r\n            else {\r\n                _this.scale = _this.getScale(scale);\r\n            }\r\n            _this.setPageCords(event);\r\n            _this.beginZoom(_this.scale);\r\n            _this.zoomImage(_this.scale, _this.scale - prevScale, true, true);\r\n        }, 50);\r\n        setTimeout(function () {\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        }, 60);\r\n        setTimeout(function () {\r\n            _this.zoomInProgress = false;\r\n        }, ZOOM_TRANSITION_DURATION + 110);\r\n    };\r\n    Zoom.prototype.getNaturalWidth = function (index) {\r\n        var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n        var naturalWidth = this.core.galleryItems[index].width;\r\n        return naturalWidth\r\n            ? parseFloat(naturalWidth)\r\n            : $image.get().naturalWidth;\r\n    };\r\n    Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\r\n        var _scale;\r\n        var scale;\r\n        if (naturalWidth >= width) {\r\n            _scale = naturalWidth / width;\r\n            scale = _scale || 2;\r\n        }\r\n        else {\r\n            scale = 1;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.getCurrentImageActualSizeScale = function () {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var width = $image.get().offsetWidth;\r\n        var naturalWidth = this.getNaturalWidth(this.core.index) || width;\r\n        return this.getActualSizeScale(naturalWidth, width);\r\n    };\r\n    Zoom.prototype.getPageCords = function (event) {\r\n        var cords = {};\r\n        if (event) {\r\n            cords.x = event.pageX || event.touches[0].pageX;\r\n            cords.y = event.pageY || event.touches[0].pageY;\r\n        }\r\n        else {\r\n            var containerRect = this.core.$content\r\n                .get()\r\n                .getBoundingClientRect();\r\n            cords.x = containerRect.width / 2 + containerRect.left;\r\n            cords.y =\r\n                containerRect.height / 2 + this.scrollTop + containerRect.top;\r\n        }\r\n        return cords;\r\n    };\r\n    Zoom.prototype.setPageCords = function (event) {\r\n        var pageCords = this.getPageCords(event);\r\n        this.pageX = pageCords.x;\r\n        this.pageY = pageCords.y;\r\n    };\r\n    Zoom.prototype.manageActualPixelClassNames = function () {\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomIn)\r\n            .addClass(this.settings.actualSizeIcons.zoomOut);\r\n    };\r\n    // If true, zoomed - in else zoomed out\r\n    Zoom.prototype.beginZoom = function (scale) {\r\n        this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n        if (scale > 1) {\r\n            this.core.outer.addClass('lg-zoomed');\r\n            this.manageActualPixelClassNames();\r\n        }\r\n        else {\r\n            this.resetZoom();\r\n        }\r\n        return scale > 1;\r\n    };\r\n    Zoom.prototype.getScale = function (scale) {\r\n        var actualSizeScale = this.getCurrentImageActualSizeScale();\r\n        if (scale < 1) {\r\n            scale = 1;\r\n        }\r\n        else if (scale > actualSizeScale) {\r\n            scale = actualSizeScale;\r\n        }\r\n        return scale;\r\n    };\r\n    Zoom.prototype.init = function () {\r\n        var _this = this;\r\n        if (!this.settings.zoom) {\r\n            return;\r\n        }\r\n        this.buildTemplates();\r\n        this.enableZoomOnSlideItemLoad();\r\n        var tapped = null;\r\n        this.core.outer.on('dblclick.lg', function (event) {\r\n            if (!_this.$LG(event.target).hasClass('lg-image')) {\r\n                return;\r\n            }\r\n            _this.setActualSize(_this.core.index, event);\r\n        });\r\n        this.core.outer.on('touchstart.lg', function (event) {\r\n            var $target = _this.$LG(event.target);\r\n            if (event.touches.length === 1 && $target.hasClass('lg-image')) {\r\n                if (!tapped) {\r\n                    tapped = setTimeout(function () {\r\n                        tapped = null;\r\n                    }, 300);\r\n                }\r\n                else {\r\n                    clearTimeout(tapped);\r\n                    tapped = null;\r\n                    event.preventDefault();\r\n                    _this.setActualSize(_this.core.index, event);\r\n                }\r\n            }\r\n        });\r\n        this.core.LGel.on(lGEvents.containerResize + \".zoom \" + lGEvents.rotateRight + \".zoom \" + lGEvents.rotateLeft + \".zoom \" + lGEvents.flipHorizontal + \".zoom \" + lGEvents.flipVertical + \".zoom\", function () {\r\n            if (!_this.core.lgOpened ||\r\n                !_this.isImageSlide(_this.core.index) ||\r\n                _this.core.touchAction) {\r\n                return;\r\n            }\r\n            var _LGel = _this.core\r\n                .getSlideItem(_this.core.index)\r\n                .find('.lg-img-wrap')\r\n                .first();\r\n            _this.top = 0;\r\n            _this.left = 0;\r\n            _this.setZoomEssentials();\r\n            _this.setZoomSwipeStyles(_LGel, { x: 0, y: 0 });\r\n            _this.positionChanged = true;\r\n        });\r\n        // Update zoom on resize and orientationchange\r\n        this.$LG(window).on(\"scroll.lg.zoom.global\" + this.core.lgId, function () {\r\n            if (!_this.core.lgOpened)\r\n                return;\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n        });\r\n        this.core.getElementById('lg-zoom-out').on('click.lg', function () {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            var timeout = 0;\r\n            if (_this.imageReset) {\r\n                _this.resetImageTranslate(_this.core.index);\r\n                timeout = 50;\r\n            }\r\n            setTimeout(function () {\r\n                var scale = _this.scale - _this.settings.scale;\r\n                if (scale < 1) {\r\n                    scale = 1;\r\n                }\r\n                _this.beginZoom(scale);\r\n                _this.zoomImage(scale, -_this.settings.scale, true, !_this.settings.infiniteZoom);\r\n            }, timeout);\r\n        });\r\n        this.core.getElementById('lg-zoom-in').on('click.lg', function () {\r\n            _this.zoomIn();\r\n        });\r\n        this.core.getElementById('lg-actual-size').on('click.lg', function () {\r\n            _this.setActualSize(_this.core.index);\r\n        });\r\n        this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\r\n            _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\r\n        });\r\n        this.core.LGel.on(lGEvents.afterOpen + \".zoom\", function () {\r\n            _this.scrollTop = _this.$LG(window).scrollTop();\r\n            // Set the initial value center\r\n            _this.pageX = _this.core.outer.width() / 2;\r\n            _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;\r\n            _this.scale = 1;\r\n        });\r\n        // Reset zoom on slide change\r\n        this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\r\n            var prevIndex = event.detail.prevIndex;\r\n            _this.scale = 1;\r\n            _this.positionChanged = false;\r\n            _this.zoomInProgress = false;\r\n            _this.resetZoom(prevIndex);\r\n            _this.resetImageTranslate(prevIndex);\r\n            if (_this.isImageSlide(_this.core.index)) {\r\n                _this.setZoomEssentials();\r\n            }\r\n        });\r\n        // Drag option after zoom\r\n        this.zoomDrag();\r\n        this.pinchZoom();\r\n        this.zoomSwipe();\r\n        // Store the zoomable timeout value just to clear it while closing\r\n        this.zoomableTimeout = false;\r\n        this.positionChanged = false;\r\n        this.zoomInProgress = false;\r\n    };\r\n    Zoom.prototype.zoomIn = function () {\r\n        // Allow zoom only on image\r\n        if (!this.isImageSlide(this.core.index)) {\r\n            return;\r\n        }\r\n        var scale = this.scale + this.settings.scale;\r\n        if (!this.settings.infiniteZoom) {\r\n            scale = this.getScale(scale);\r\n        }\r\n        this.beginZoom(scale);\r\n        this.zoomImage(scale, Math.min(this.settings.scale, scale - this.scale), true, !this.settings.infiniteZoom);\r\n    };\r\n    // Reset zoom effect\r\n    Zoom.prototype.resetZoom = function (index) {\r\n        this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\r\n        var $actualSize = this.core.getElementById('lg-actual-size');\r\n        var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\r\n        $actualSize\r\n            .removeClass(this.settings.actualSizeIcons.zoomOut)\r\n            .addClass(this.settings.actualSizeIcons.zoomIn);\r\n        $item.find('.lg-img-wrap').first().removeAttr('style');\r\n        $item.find('.lg-image').first().removeAttr('style');\r\n        this.scale = 1;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        // Reset pagx pagy values to center\r\n        this.setPageCords();\r\n    };\r\n    Zoom.prototype.getTouchDistance = function (e) {\r\n        return Math.sqrt((e.touches[0].pageX - e.touches[1].pageX) *\r\n            (e.touches[0].pageX - e.touches[1].pageX) +\r\n            (e.touches[0].pageY - e.touches[1].pageY) *\r\n                (e.touches[0].pageY - e.touches[1].pageY));\r\n    };\r\n    Zoom.prototype.pinchZoom = function () {\r\n        var _this = this;\r\n        var startDist = 0;\r\n        var pinchStarted = false;\r\n        var initScale = 1;\r\n        var prevScale = 0;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.outer.on('touchstart.lg', function (e) {\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            if (e.touches.length === 2) {\r\n                e.preventDefault();\r\n                if (_this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                    return;\r\n                }\r\n                initScale = _this.scale || 1;\r\n                _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n                _this.setPageCords(e);\r\n                _this.resetImageTranslate(_this.core.index);\r\n                _this.core.touchAction = 'pinch';\r\n                startDist = _this.getTouchDistance(e);\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.touches.length === 2 &&\r\n                _this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                var endDist = _this.getTouchDistance(e);\r\n                var distance = startDist - endDist;\r\n                if (!pinchStarted && Math.abs(distance) > 5) {\r\n                    pinchStarted = true;\r\n                }\r\n                if (pinchStarted) {\r\n                    prevScale = _this.scale;\r\n                    var _scale = Math.max(1, initScale + -distance * 0.02);\r\n                    _this.scale =\r\n                        Math.round((_scale + Number.EPSILON) * 100) / 100;\r\n                    var diff = _this.scale - prevScale;\r\n                    _this.zoomImage(_this.scale, Math.round((diff + Number.EPSILON) * 100) / 100, false, false);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'pinch' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                pinchStarted = false;\r\n                startDist = 0;\r\n                if (_this.scale <= 1) {\r\n                    _this.resetZoom();\r\n                }\r\n                else {\r\n                    var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n                    if (_this.scale >= actualSizeScale) {\r\n                        var scaleDiff = actualSizeScale - _this.scale;\r\n                        if (scaleDiff === 0) {\r\n                            scaleDiff = 0.01;\r\n                        }\r\n                        _this.zoomImage(actualSizeScale, scaleDiff, false, true);\r\n                    }\r\n                    _this.manageActualPixelClassNames();\r\n                    _this.core.outer.addClass('lg-zoomed');\r\n                }\r\n                _this.core.touchAction = undefined;\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration) {\r\n        var distanceXnew = endCoords.x - startCoords.x;\r\n        var distanceYnew = endCoords.y - startCoords.y;\r\n        var speedX = Math.abs(distanceXnew) / touchDuration + 1;\r\n        var speedY = Math.abs(distanceYnew) / touchDuration + 1;\r\n        if (speedX > 2) {\r\n            speedX += 1;\r\n        }\r\n        if (speedY > 2) {\r\n            speedY += 1;\r\n        }\r\n        distanceXnew = distanceXnew * speedX;\r\n        distanceYnew = distanceYnew * speedY;\r\n        var _LGel = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-img-wrap')\r\n            .first();\r\n        var distance = {};\r\n        distance.x = this.left + distanceXnew;\r\n        distance.y = this.top + distanceYnew;\r\n        var possibleSwipeCords = this.getPossibleSwipeDragCords();\r\n        if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\r\n            if (allowY) {\r\n                if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                    distance.y = possibleSwipeCords.minY;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                    distance.y = possibleSwipeCords.maxY;\r\n                }\r\n            }\r\n            if (allowX) {\r\n                if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                    distance.x = possibleSwipeCords.minX;\r\n                }\r\n                else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                    distance.x = possibleSwipeCords.maxX;\r\n                }\r\n            }\r\n            if (allowY) {\r\n                this.top = distance.y;\r\n            }\r\n            else {\r\n                distance.y = this.top;\r\n            }\r\n            if (allowX) {\r\n                this.left = distance.x;\r\n            }\r\n            else {\r\n                distance.x = this.left;\r\n            }\r\n            this.setZoomSwipeStyles(_LGel, distance);\r\n            this.positionChanged = true;\r\n        }\r\n    };\r\n    Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {\r\n        var distance = {};\r\n        if (allowY) {\r\n            distance.y = this.top + (endCoords.y - startCoords.y);\r\n            if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                var diffMinY = possibleSwipeCords.minY - distance.y;\r\n                distance.y = possibleSwipeCords.minY - diffMinY / 6;\r\n            }\r\n            else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                var diffMaxY = distance.y - possibleSwipeCords.maxY;\r\n                distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.y = this.top;\r\n        }\r\n        if (allowX) {\r\n            distance.x = this.left + (endCoords.x - startCoords.x);\r\n            if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                var diffMinX = possibleSwipeCords.minX - distance.x;\r\n                distance.x = possibleSwipeCords.minX - diffMinX / 6;\r\n            }\r\n            else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                var difMaxX = distance.x - possibleSwipeCords.maxX;\r\n                distance.x = possibleSwipeCords.maxX + difMaxX / 6;\r\n            }\r\n        }\r\n        else {\r\n            distance.x = this.left;\r\n        }\r\n        return distance;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {\r\n        return x >= minX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {\r\n        return x <= maxX;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleTop = function (y, minY) {\r\n        return y >= minY;\r\n    };\r\n    Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {\r\n        return y <= maxY;\r\n    };\r\n    Zoom.prototype.isImageSlide = function (index) {\r\n        var currentItem = this.core.galleryItems[index];\r\n        return this.core.getSlideType(currentItem) === 'image';\r\n    };\r\n    Zoom.prototype.getPossibleSwipeDragCords = function (scale) {\r\n        var $image = this.core\r\n            .getSlideItem(this.core.index)\r\n            .find('.lg-image')\r\n            .first();\r\n        var bottom = this.core.mediaContainerPosition.bottom;\r\n        var imgRect = $image.get().getBoundingClientRect();\r\n        var imageHeight = imgRect.height;\r\n        var imageWidth = imgRect.width;\r\n        if (scale) {\r\n            imageHeight = imageHeight + scale * imageHeight;\r\n            imageWidth = imageWidth + scale * imageWidth;\r\n        }\r\n        var minY = (imageHeight - this.containerRect.height) / 2;\r\n        var maxY = (this.containerRect.height - imageHeight) / 2 + bottom;\r\n        var minX = (imageWidth - this.containerRect.width) / 2;\r\n        var maxX = (this.containerRect.width - imageWidth) / 2;\r\n        var possibleSwipeCords = {\r\n            minY: minY,\r\n            maxY: maxY,\r\n            minX: minX,\r\n            maxX: maxX,\r\n        };\r\n        return possibleSwipeCords;\r\n    };\r\n    Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\r\n        LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\r\n    };\r\n    Zoom.prototype.zoomSwipe = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime = new Date();\r\n        var endTime = new Date();\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        var $item = this.core.getSlideItem(this.core.index);\r\n        this.core.$inner.on('touchstart.lg', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            $item = _this.core.getSlideItem(_this.core.index);\r\n            if ((_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) &&\r\n                e.touches.length === 1 &&\r\n                _this.core.outer.hasClass('lg-zoomed')) {\r\n                e.preventDefault();\r\n                startTime = new Date();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (allowX || allowY) {\r\n                    startCoords = _this.getSwipeCords(e);\r\n                }\r\n                possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                // reset opacity and transition duration\r\n                _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\r\n            }\r\n        });\r\n        this.core.$inner.on('touchmove.lg', function (e) {\r\n            if (e.touches.length === 1 &&\r\n                _this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = 'zoomSwipe';\r\n                endCoords = _this.getSwipeCords(e);\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                if (Math.abs(endCoords.x - startCoords.x) > 15 ||\r\n                    Math.abs(endCoords.y - startCoords.y) > 15) {\r\n                    isMoved = true;\r\n                    _this.setZoomSwipeStyles(_LGel, distance);\r\n                }\r\n            }\r\n        });\r\n        this.core.$inner.on('touchend.lg', function (e) {\r\n            if (_this.core.touchAction === 'zoomSwipe' &&\r\n                (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target))) {\r\n                e.preventDefault();\r\n                _this.core.touchAction = undefined;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                if (!isMoved) {\r\n                    return;\r\n                }\r\n                isMoved = false;\r\n                endTime = new Date();\r\n                var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n            }\r\n        });\r\n    };\r\n    Zoom.prototype.zoomDrag = function () {\r\n        var _this = this;\r\n        var startCoords = {};\r\n        var endCoords = {};\r\n        var isDragging = false;\r\n        var isMoved = false;\r\n        // Allow x direction drag\r\n        var allowX = false;\r\n        // Allow Y direction drag\r\n        var allowY = false;\r\n        var startTime;\r\n        var endTime;\r\n        var possibleSwipeCords;\r\n        var _LGel;\r\n        this.core.outer.on('mousedown.lg.zoom', function (e) {\r\n            // Allow zoom only on image\r\n            if (!_this.isImageSlide(_this.core.index)) {\r\n                return;\r\n            }\r\n            var $item = _this.core.getSlideItem(_this.core.index);\r\n            if (_this.$LG(e.target).hasClass('lg-item') ||\r\n                $item.get().contains(e.target)) {\r\n                startTime = new Date();\r\n                _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                allowY = dragAllowedAxises.allowY;\r\n                allowX = dragAllowedAxises.allowX;\r\n                if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                    if (_this.$LG(e.target).hasClass('lg-object') &&\r\n                        (allowX || allowY)) {\r\n                        e.preventDefault();\r\n                        startCoords = _this.getDragCords(e);\r\n                        possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                        isDragging = true;\r\n                        _this.core.outer\r\n                            .removeClass('lg-grab')\r\n                            .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\r\n                        // reset opacity and transition duration\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                isMoved = true;\r\n                endCoords = _this.getDragCords(e);\r\n                var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                _this.setZoomSwipeStyles(_LGel, distance);\r\n            }\r\n        });\r\n        this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\r\n            if (isDragging) {\r\n                endTime = new Date();\r\n                isDragging = false;\r\n                _this.core.outer.removeClass('lg-zoom-dragging');\r\n                // Fix for chrome mouse move on click\r\n                if (isMoved &&\r\n                    (startCoords.x !== endCoords.x ||\r\n                        startCoords.y !== endCoords.y)) {\r\n                    endCoords = _this.getDragCords(e);\r\n                    var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n                }\r\n                isMoved = false;\r\n            }\r\n            _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n        });\r\n    };\r\n    Zoom.prototype.closeGallery = function () {\r\n        this.resetZoom();\r\n        this.zoomInProgress = false;\r\n    };\r\n    Zoom.prototype.destroy = function () {\r\n        // Unbind all events added by lightGallery zoom plugin\r\n        this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\r\n        this.core.LGel.off('.lg.zoom');\r\n        this.core.LGel.off('.zoom');\r\n        clearTimeout(this.zoomableTimeout);\r\n        this.zoomableTimeout = false;\r\n    };\r\n    return Zoom;\r\n}());\n\nexport default Zoom;\n//# sourceMappingURL=lg-zoom.es5.js.map\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","zoomSettings","scale","zoom","infiniteZoom","actualSize","showZoomInOutIcons","actualSizeIcons","zoomIn","zoomOut","enableZoomAfter","zoomPluginStrings","viewActualSize","lGEvents","Zoom","instance","$LG","core","settings","buildTemplates","zoomIcons","getIdName","outer","addClass","$toolbar","first","append","enableZoom","event","_this","_speed","detail","delay","hasClass","removeClass","zoomableTimeout","setTimeout","isImageSlide","index","getSlideItem","setZoomEssentials","enableZoomOnSlideItemLoad","LGel","on","bind","getDragCords","e","x","pageX","y","pageY","getSwipeCords","touches","getDragAllowedAxises","scaleDiff","containerRect","allowX","allowY","$image","find","get","height","width","rect","getBoundingClientRect","offsetHeight","offsetWidth","$content","zoomImage","reposition","resetToMax","Math","abs","originalX","originalY","offsetX","left","offsetY","top","scrollTop","positionChanged","dragAllowedAxises","possibleSwipeCords","getPossibleSwipeDragCords","_x","_y","scaleVal","isBeyondPossibleLeft","minX","isBeyondPossibleRight","maxX","isBeyondPossibleTop","minY","isBeyondPossibleBottom","maxY","setZoomStyles","setZoomImageSize","resetImageTranslate","imageReset","css","actualSizeScale","getCurrentImageActualSizeScale","naturalWidth","naturalHeight","ZOOM_TRANSITION_DURATION","style","$imageWrap","$dummyImage","transform","setActualSize","zoomInProgress","currentItem","galleryItems","src","prevScale","getScale","setPageCords","beginZoom","getNaturalWidth","parseFloat","getActualSizeScale","getPageCords","cords","pageCords","manageActualPixelClassNames","getElementById","resetZoom","init","tapped","target","$target","clearTimeout","preventDefault","lgOpened","touchAction","_LGel","setZoomSwipeStyles","window","lgId","timeout","prevIndex","zoomDrag","pinchZoom","zoomSwipe","min","$actualSize","$item","undefined","removeAttr","getTouchDistance","sqrt","startDist","pinchStarted","initScale","$inner","contains","endDist","distance","_scale","max","round","Number","EPSILON","diff","touchendZoom","startCoords","endCoords","touchDuration","distanceXnew","distanceYnew","speedX","speedY","getZoomSwipeCords","diffMinY","diffMaxY","diffMinX","difMaxX","getSlideType","bottom","mediaContainerPosition","imgRect","imageHeight","imageWidth","isMoved","startTime","Date","valueOf","endTime","isDragging","closeGallery","destroy","off"],"sourceRoot":""}